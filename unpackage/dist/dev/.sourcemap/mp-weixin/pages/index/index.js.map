{"version":3,"file":"index.js","sources":["pages/index/index.vue","../../../../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- 上面的 cards -->\r\n    <div class=\"box top\">\r\n      <div class=\"cards\">\r\n        <button\r\n          v-for=\"(card, index) in cards\"\r\n          :key=\"index\"\r\n          class=\"card-btn\"\r\n          :class=\"{ selected: selectedCards.includes(index) }\"\r\n          @click=\"toggleCard(index)\"\r\n        >\r\n          <text>{{ card.name }}</text>\r\n          <text>{{ card.value }}$ / -{{ card.loss }}$</text>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 下面左右布局 -->\r\n    <div class=\"bottom\">\r\n      <!-- 左边 labels -->\r\n      <div class=\"labels\">\r\n        <label>\r\n          Money:\r\n          <input v-model=\"money\" type=\"number\" />\r\n        </label>\r\n        <div>Bread: {{ counts.bread }}</div>\r\n        <div>Apple: {{ counts.apple }}</div>\r\n        <div>Chicken: {{ counts.chicken }}</div>\r\n        <div>Cheese: {{ counts.cheese }}</div>\r\n      </div>\r\n\r\n      <!-- 右边按钮 -->\r\n      <div class=\"btn-wrap\">\r\n        <button @click=\"dealCards\">deal</button>\r\n        <button @click=\"changeCards\">change</button>\r\n        <button @click=\"clearCards\">clear</button>\r\n        <button @click=\"claim\">claim</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\nconst cardsDefinition = {\r\n  apple: { value: 2, loss: 2, count: 48, name: \"apple\" },\r\n  cheese: { value: 3, loss: 2, count: 36, name: \"cheese\" },\r\n  bread: { value: 3, loss: 2, count: 36, name: \"bread\" },\r\n  chicken: { value: 4, loss: 2, count: 24, name: \"chicken\" },\r\n  contraband: { value: 8, loss: 4, count: 60, name: \"contraband\" },\r\n};\r\nconst deck = Object.entries(cardsDefinition)\r\n  .map(([name, value]) => Array(value.count).fill({ ...value }))\r\n  .flat();\r\nconst totalCardSize = 204;\r\nconst items = Object.keys(cardsDefinition);\r\nconst cards = ref([]);\r\nconst selectedCards = ref([]);\r\nconst money = ref(50);\r\nconst counts = ref({\r\n  bread: 0,\r\n  apple: 0,\r\n  chicken: 0,\r\n  cheese: 0,\r\n  contraband: 0,\r\n});\r\n\r\nfunction getRandomCard() {\r\n  let r = Math.floor(Math.random() * totalCardSize);\r\n  return deck[r];\r\n}\r\n\r\nfunction dealCards() {\r\n  cards.value = Array.from({ length: 6 }, () => getRandomCard());\r\n  selectedCards.value = [];\r\n}\r\n\r\nfunction toggleCard(index) {\r\n  if (selectedCards.value.includes(index)) {\r\n    selectedCards.value = selectedCards.value.filter((i) => i !== index);\r\n  } else {\r\n    selectedCards.value.push(index);\r\n  }\r\n}\r\n\r\nfunction changeCards() {\r\n  selectedCards.value.forEach((idx) => {\r\n    cards.value[idx] = getRandomCard();\r\n  });\r\n  selectedCards.value = [];\r\n}\r\n\r\nfunction clearCards() {\r\n  cards.value = [];\r\n  selectedCards.value = [];\r\n}\r\n\r\nfunction claim() {\r\n  let total = 0;\r\n\r\n  selectedCards.value.forEach((idx) => {\r\n    const card = cards.value[idx];\r\n    total += card.value; // 累加 money\r\n    if (counts.value[card.name] !== undefined) {\r\n      counts.value[card.name]++;\r\n    }\r\n  });\r\n\r\n  money.value += total;\r\n\r\n  // 删除已选的卡牌\r\n  cards.value = cards.value.filter(\r\n    (_, idx) => !selectedCards.value.includes(idx)\r\n  );\r\n\r\n  selectedCards.value = [];\r\n  cards.value = [];\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 整体垂直：上（cards）/下（bottom） */\r\n.page {\r\n  display: grid;\r\n  gap: 16px;\r\n  padding: 10px;\r\n}\r\n\r\n/* 上方 cards 容器 */\r\n.top {\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50vh; /* 固定高度 */\r\n}\r\n\r\n/* cards 网格 */\r\n.cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(2, 1fr);\r\n  gap: 8px;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.card-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 16px;\r\n  border-radius: 6px;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  flex-direction: column; /* 竖排排列 */\r\n}\r\n.card-btn.selected {\r\n  border: 3px solid blue;\r\n}\r\n\r\n/* 下方左右两栏：左 labels | 右 btn-wrap */\r\n.bottom {\r\n  display: grid;\r\n  grid-template-columns: 220px 1fr; /* 左列固定/右列自适应 */\r\n  gap: 20px;\r\n  width: 100%;\r\n  max-width: 900px; /* 可按需调整 */\r\n  margin: 0 auto;\r\n  align-items: start;\r\n  height: 50vh;\r\n}\r\n\r\n/* 竖排 labels（提高特异性覆盖旧样式） */\r\n.bottom .labels {\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n  gap: 10px;\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  height: 50vh;\r\n}\r\n\r\n.btn-wrap {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr); /* 四列均分 */\r\n  gap: 15px;\r\n}\r\n\r\n.btn-wrap button {\r\n  width: 100%; /* 填满格子 */\r\n  height: 60px; /* 固定高度，可按需调整 */\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-radius: 6px;\r\n  background: #eee;\r\n  cursor: pointer;\r\n  display: flex; /* 居中内容 */\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* 小屏自适应：按钮改两列 */\r\n@media (max-width: 560px) {\r\n  .bottom {\r\n    grid-template-columns: 160px 1fr;\r\n  }\r\n  .btn-wrap {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n}\r\n\r\ninput {\r\n  width: auto;\r\n  padding: 8px 12px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  outline: none;\r\n  transition: border-color 0.2s ease, box-shadow 0.2s ease;\r\n}\r\n\r\ninput:focus {\r\n  border-color: #409eff;\r\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2);\r\n}\r\n</style>\r\n","import MiniProgramPage from 'C:/Users/64170/Documents/HBuilderProjects/officerGame/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref"],"mappings":";;AAwDA,MAAM,gBAAgB;;;;AAVtB,UAAM,kBAAkB;AAAA,MACtB,OAAO,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,IAAI,MAAM,QAAS;AAAA,MACtD,QAAQ,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,IAAI,MAAM,SAAU;AAAA,MACxD,OAAO,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,IAAI,MAAM,QAAS;AAAA,MACtD,SAAS,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,IAAI,MAAM,UAAW;AAAA,MAC1D,YAAY,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,IAAI,MAAM,aAAc;AAAA,IAClE;AACA,UAAM,OAAO,OAAO,QAAQ,eAAe,EACxC,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,MAAM,MAAM,KAAK,EAAE,KAAK,EAAE,GAAG,MAAO,CAAA,CAAC,EAC5D;AAGH,UAAM,QAAQA,cAAAA,IAAI,CAAA,CAAE;AACpB,UAAM,gBAAgBA,cAAAA,IAAI,CAAA,CAAE;AAC5B,UAAM,QAAQA,cAAAA,IAAI,EAAE;AACpB,UAAM,SAASA,cAAAA,IAAI;AAAA,MACjB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,YAAY;AAAA,IACd,CAAC;AAED,aAAS,gBAAgB;AACvB,UAAI,IAAI,KAAK,MAAM,KAAK,OAAM,IAAK,aAAa;AAChD,aAAO,KAAK,CAAC;AAAA,IACf;AAEA,aAAS,YAAY;AACnB,YAAM,QAAQ,MAAM,KAAK,EAAE,QAAQ,EAAG,GAAE,MAAM,cAAa,CAAE;AAC7D,oBAAc,QAAQ;IACxB;AAEA,aAAS,WAAW,OAAO;AACzB,UAAI,cAAc,MAAM,SAAS,KAAK,GAAG;AACvC,sBAAc,QAAQ,cAAc,MAAM,OAAO,CAAC,MAAM,MAAM,KAAK;AAAA,MACvE,OAAS;AACL,sBAAc,MAAM,KAAK,KAAK;AAAA,MAC/B;AAAA,IACH;AAEA,aAAS,cAAc;AACrB,oBAAc,MAAM,QAAQ,CAAC,QAAQ;AACnC,cAAM,MAAM,GAAG,IAAI,cAAa;AAAA,MACpC,CAAG;AACD,oBAAc,QAAQ;IACxB;AAEA,aAAS,aAAa;AACpB,YAAM,QAAQ;AACd,oBAAc,QAAQ;IACxB;AAEA,aAAS,QAAQ;AACf,UAAI,QAAQ;AAEZ,oBAAc,MAAM,QAAQ,CAAC,QAAQ;AACnC,cAAM,OAAO,MAAM,MAAM,GAAG;AAC5B,iBAAS,KAAK;AACd,YAAI,OAAO,MAAM,KAAK,IAAI,MAAM,QAAW;AACzC,iBAAO,MAAM,KAAK,IAAI;AAAA,QACvB;AAAA,MACL,CAAG;AAED,YAAM,SAAS;AAGf,YAAM,QAAQ,MAAM,MAAM;AAAA,QACxB,CAAC,GAAG,QAAQ,CAAC,cAAc,MAAM,SAAS,GAAG;AAAA,MACjD;AAEE,oBAAc,QAAQ;AACtB,YAAM,QAAQ;IAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtHA,GAAG,WAAW,eAAe;"}